# Alternative Dockerfile utilisant Ubuntu pour éviter les problèmes Alpine/musl
FROM node:20-bullseye AS builder

WORKDIR /app

# Mettre à jour les packages et installer les dépendances
RUN apt-get update && apt-get install -y \
    python3 \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copier les fichiers de configuration
COPY package*.json ./

# Installer les dépendances npm
RUN npm cache clean --force && \
    npm install --force --legacy-peer-deps

# Copier le code source
COPY . .

# Build de l'application
RUN npm run build

# Stage 2: Production avec Nginx
FROM nginx:stable

# Copier les fichiers buildés
COPY --from=builder /app/dist /usr/share/nginx/html

# Copier la configuration Nginx
COPY ./nginx/nginx.front.conf /etc/nginx/conf.d/default.conf

# Exposer le port
EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
