name: Deploy to Production

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create firebase.js from secrets
        run: |
          echo "import { initializeApp } from 'firebase/app';
          import { getDatabase } from 'firebase/database';
          import { getAuth } from 'firebase/auth';
          import { getStorage } from 'firebase/storage';
          import { get, ref } from 'firebase/database';

          const firebaseConfig = {
            apiKey: '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            databaseURL: '${{ secrets.FIREBASE_DATABASE_URL }}',
            projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
            storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: '${{ secrets.FIREBASE_APP_ID }}'
          };

          const app = initializeApp(firebaseConfig);
          const db = getDatabase(app);
          const auth = getAuth(app);
          const storage = getStorage(app);

          async function getUserNameById(userId) {
            const userRef = ref(db, \`Users/\${userId}\`);
            const snapshot = await get(userRef);
            if (snapshot.exists()) {
              const data = snapshot.val();
              const prenom = data.Prenom || '';
              const nom = data.Nom || '';
              return \`\${prenom} \${nom}\`.trim();
            } else {
              return '';
            }
          }

          export { db, auth, storage, getUserNameById };
          " > firebase.js

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      # DÃ©ploiement FTP (Infomaniak/FileZilla ou autre)
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /
